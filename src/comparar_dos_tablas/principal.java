/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package comparar_dos_tablas;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.ResultSetMetaData;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jose
 */
public class principal extends javax.swing.JFrame {
    DefaultTableModel model;    
    Conexion.conexion conexion = new Conexion.conexion();
    Connection cn = conexion.connect();
    Statement sent;
    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
        llenar_mercancia();
        llenar_productos();
    }
    
    void llenar_mercancia() {
        try {
            cn = conexion.connect();
            String [] titulos = {"C° Prod","C° OC","Fecha","T° Docto","N° Docto","Lote","Descripcion", "Cantidad","Precio", "Forma Pago","N° Cheque","N° Cuenta","N° Trans"};
            String sql = "SELECT codigo_prod, codigo_oc, fecha, tipo_doc, num_doc, lote, descripcion, cantidad, valor_total, forma_pago, num_cheque, num_cuenta, num_trans FROM mercancia";
            model = new DefaultTableModel(null, titulos);
            sent = cn.createStatement();
            ResultSet rs = sent.executeQuery(sql);
            String [] fila = new String [13];
            while (rs.next()){
                fila[0]=rs.getString("codigo_prod");
                fila[1]=rs.getString("codigo_oc");
                fila[2]=rs.getString("fecha");
                fila[3]=rs.getString("tipo_doc");
                fila[4]=rs.getString("num_doc");
                fila[5]=rs.getString("lote");
                fila[6]=rs.getString("descripcion");
                fila[7]=rs.getString("cantidad");
                fila[8]=rs.getString("valor_total");
                fila[9]=rs.getString("forma_pago");
                fila[10]=rs.getString("num_cheque");
                fila[11]=rs.getString("num_cuenta");
                fila[12]=rs.getString("num_trans");
            model.addRow(fila);
            }
            jtbl_mercaderia.setModel(model);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    void llenar_productos() {
        try {
            cn = conexion.connect();
            String [] titulos = {"Codigo","Codigo Prod","Descripcion","Lote","Cantidad","Fecha","Valor Compra","Valor Venta"};
            String sql = "SELECT id, codigo_prod, descripcion, lote, cantidad, fecha, valor_compra, valor_venta FROM productos";
            model = new DefaultTableModel(null, titulos);
            sent = cn.createStatement();
            ResultSet rs = sent.executeQuery(sql);
            String [] fila = new String [8];
            while (rs.next()){
                fila[0]=rs.getString("id");
                fila[1]=rs.getString("codigo_prod");
                fila[2]=rs.getString("descripcion");
                fila[3]=rs.getString("lote");
                fila[4]=rs.getString("cantidad");
                fila[5]=rs.getString("fecha");
                fila[6]=rs.getString("valor_compra");
                fila[7]=rs.getString("valor_venta");                
            model.addRow(fila);
            }
            jtbl_productos.setModel(model);
        }catch (Exception e) {
            e.printStackTrace();
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane8 = new javax.swing.JScrollPane();
        jtbl_mercaderia = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        jtbl_productos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtbl_mercaderia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "C° Prod", "C° OC", "Fecha", "T° Docto", "N° Docto", "Lote", "Descripción", "Cantidad", "Precio", "Forma Pago", "N° Cheque", "N° Cuenta", "N° Trans"
            }
        ));
        jtbl_mercaderia.setToolTipText("Tabla Mercancia [Almacenado]");
        jtbl_mercaderia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_mercaderiaMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jtbl_mercaderia);

        jtbl_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Codigo Prod", "Descripción", "Lote", "Cantidad", "Fecha", "Valor Compra", "Valor Venta"
            }
        ));
        jtbl_productos.setToolTipText("Tabla Productos [Almacenado]");
        jtbl_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_productosMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jtbl_productos);

        jButton1.setText("Comparar Tablas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addComponent(jScrollPane11))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(446, 446, 446)
                .addComponent(jButton1)
                .addContainerGap(477, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbl_mercaderiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_mercaderiaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_mercaderiaMouseClicked

    private void jtbl_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_productosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_productosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          DefaultListModel modelo = new DefaultListModel();
          // Dos variables String que necesitaré para almacenar los códigos de facturas
          String val1 = null, val2 = null;
          // Primer ciclo 'for' en donde recorreré el JTable de SQL Server
          for (int i = 0; i < jtbl_mercaderia.getRowCount(); i++) {
               // Variable 'boolean' inicializada en false
               boolean encontrada = false;
               // Segundo ciclo 'for' en donde recorreré el JTable de Oracle
               for (int j = 0; j < jtbl_productos.getRowCount(); j++)     {
                    // Almaceno los códigos de facturas SQL Server y Oracle en 'val1' 
                    // y 'val2', respectivamente.
                    val1 = String.valueOf(jtbl_mercaderia.getValueAt(i, 0));
                    val2 = String.valueOf(jtbl_productos.getValueAt(j, 0));
                    // Hago la pregunta de que si son iguales
                    if (val1.equals(val2)) {
                         JOptionPane.showMessageDialog(null, ""+val1+"Son iguales con"+val2);
                         encontrada = true;
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe concordancia");
                    }
                       
               }
          }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jtbl_mercaderia;
    private javax.swing.JTable jtbl_productos;
    // End of variables declaration//GEN-END:variables
}
